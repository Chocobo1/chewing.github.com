---
layout: post
title: libchewing 0.4.0 Released
---
libchewing 0.4.0 Released: 2014-04-11

What's New in libchewing 0.4.0
---------------------------------------------------------
* Add the following APIs:
  - Userphrase manipulation
    - `chewing_userphrase_enumerate`
    - `chewing_userphrase_has_next`
    - `chewing_userphrase_get`
    - `chewing_userphrase_add`
    - `chewing_userphrase_remove`
    - `chewing_userphrase_lookup`
  - Keyboardless action
    - `chewing_cand_open`
    - `chewing_cand_close`
    - `chewing_cand_string_by_index_static`
    - `chewing_cand_choose_by_index`
    - `chewing_cand_list_first`
    - `chewing_cand_list_last`
    - `chewing_cand_list_has_next`
    - `chewing_cand_list_has_prev`
    - `chewing_cand_list_next`
    - `chewing_cand_list_prev`
    - `chewing_commit_preedit_buf`
    - `chewing_clean_preedit_buf`
    - `chewing_clean_bopomofo_buf`
  - Bopomofo buffer
    - `chewing_bopomofo_Check`
    - `chewing_bopomofo_String_static`
  - Static API
    - `chewing_aux_String_static`
    - `chewing_buffer_String_static`
    - `chewing_cand_String_static`
    - `chewing_commit_String_static`
    - `chewing_kbtype_String_static`
  - Misc
    - `chewing_new2`
* Dictionary format:
  - Remove text data support
  - Introduce platform independent binary data representation
  - Move binary data to `share/libchewing/*`
* Userphrase format:
  - Support SQLite-based user phrase storage and manipulation
* New coding style:
  - Use `scripts/indent.sh` to change coding style
* Bug fixed:
  - Fix `chewing_zuin_Check` wrong return value #62
  - Fix numlock key cannot output number #45
  - Fix negative frequency problem #75
  - Fix cannot select candidate when symbol exists #79
  - Avoid clearing the buffer when Up arrow key is pressed and escCleanAllBuf is 1.
  - Fix cannot handle numlock 9 correctly #88
  - Fix invalid characters are committed when pre-edit buffer is full
  - Fix AutoLearnPhrase cannot fill correct wordSeq #108
  - Fix wrong auto learn when symbol in between #112
  - Fix missing `rpl_malloc` for cross compilation #118
  - Fix '\n' appear in symbol table #126
  - Reopen candidate list for symbols with down key #127 #135
  - Let up key close candidate list of symbols #131 #138
* Misc:
  - Add `make check' in cmake build
  - Change `MAX_UTF8_SIZE` to 4
  - Update official website URL
  - Use `CreateFileA()` instead of `CreateFile()` to stick with the ANSI API
  - Do not check phrase longer than `MAX_PHRASE_LEN`
  - Implement dynamic programming phrasing algorithm #73
  - Clean bopomofo buffer when mode change to English mode #89 #97
  - Update README to GFM.
  - Replace 'INCLUDE' with 'AM_CPPFLAGS' #68 #114 #116
  - Use [Shift]+[-] to input EM DASH (u+2014) as default #113 #124
  - Use Backspace to close candidate window #128
  - Use PgUp/PgDn to turn pages of candidates #129
  - Update Windows default search path #78
  - The word "zuin", "Zhuyin" are obsolete terms for "Bopomofo"
  - Add const whenever possible in several APIs
  - Toggle shape mode with shift-space #141 #142
* Successful stories:
  - chewing-windows-tsf project provides Text Services Framework
    support for Microsoft Windows.

[Download](https://github.com/chewing/libchewing/releases/tag/v0.4.0)

File Name: libchewing-0.4.0.tar.bz2
SHA1: 7409b0a6753e14510c96574714dcec86c7b10138
SHA512: 6a9b12816c13d7b4a0a3ca9e73560fcbb8d3e032aab3f5b90f40a6de9e7d81e934536242b4ac26db33739c7841185cc4aa10a8272cd26a76c27bdac6e75aa4a9
